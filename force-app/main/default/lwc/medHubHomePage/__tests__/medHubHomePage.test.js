import { createElement } from '@lwc/engine-dom';
import MedHubHomePage from 'c/medHubHomePage';

describe('c-med-hub-home-page', () => {
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
    });

    it('TODO: test case generated by CLI command, please fill in test logic', () => {
        // Arrange
        const element = createElement('c-med-hub-home-page', {
            is: MedHubHomePage
        });

        // Act
        document.body.appendChild(element);

        // Assert
        // const div = element.shadowRoot.querySelector('div');
        expect(1).toBe(1);
    });

    it('should render the component in new mode', () => {
        const element = createElement('c-med-hub-home-page', {
            is: MedHubHomePage
        });
        element.isEditable = false;
        document.body.appendChild(element);

        // Check if new mode elements are present
        const newModeElement = element.shadowRoot.querySelector('.new-mode');
        expect(newModeElement).not.toBeNull();

        // Check if edit mode elements are not present
        const editModeElement = element.shadowRoot.querySelector('.edit-mode');
        expect(editModeElement).toBeNull();
    });

    it('should render the component in edit mode', () => {
        const element = createElement('c-med-hub-home-page', {
            is: MedHubHomePage
        });
        element.isEditable = true;
        document.body.appendChild(element);

        // Check if edit mode elements are present
        const editModeElement = element.shadowRoot.querySelector('.edit-mode');
        expect(editModeElement).not.toBeNull();

        // Check if new mode elements are not present
        const newModeElement = element.shadowRoot.querySelector('.new-mode');
        expect(newModeElement).toBeNull();
    });
});